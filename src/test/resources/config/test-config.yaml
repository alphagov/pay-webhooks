logging:
  level: ERROR
database:
  driverClass: org.postgresql.Driver
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  url: jdbc:postgresql://${DB_HOST}:5432/webhooks?sslfactory=org.postgresql.ssl.DefaultJavaSSLFactory&${DB_SSL_OPTION}

  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "SELECT '1'"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: true

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute

ledgerBaseURL: ${LEDGER_URL}

internalRestClientConfig:
  disabledSecureConnection: ${DISABLE_INTERNAL_HTTPS:-true}

webhookMessageDeletionConfig:
  maxAgeOfMessages: ${MAXIMUM_AGE_OF_MESSAGE:-7}
  maxNumOfMessagesToExpire: ${MAXIMUM_NUMBER_OF_MESSAGES_TO_EXPIRE_PER_JOB:-6}

webhookMessageSendingQueueProcessorConfig:
  numberOfThreads: ${WEBHOOK_MESSAGE_SENDING_QUEUE_NUMBER_OF_THREADS:-1}
  initialDelayInMilliseconds: ${WEBHOOK_MESSAGE_SENDING_QUEUE_INITIAL_DELAY_IN_MILLISECONDS:-50}
  threadDelayInMilliseconds: ${WEBHOOK_MESSAGE_SENDING_QUEUE_THREAD_DELAY_IN_MILLISECONDS:-10}
  httpClientConnectionPoolSize: ${WEBHOOK_MESSAGE_SENDER_CONNECTION_POOL_SIZE:-1}
  connectionPoolTimeToLive: ${WEBHOOK_MESSAGE_SENDER_CONNECTION_POOL_TIME_TO_LIVE:-60s}
  connectionPoolIdleConnectionTimeToLive: ${WEBHOOK_MESSAGE_SENDER_CONNECTION_POOL_IDLE_CONNECTION_TIME_TO_LIVE:-5s}
  requestTimeout: ${WEBHOOK_MESSAGE_SENDER_REQUEST_TIMEOUT:-5s}
  idleConnectionMonitorEnabled: ${WEBHOOK_MESSAGE_SENDER_IDLE_CONNECTION_MONITOR_ENABLED:-true}
  idleConnectionMonitorInitialDelayInMilliseconds: ${WEBHOOK_MESSAGE_SENDING_QUEUE_IDLE_CONNECTION_MONITOR_INITIAL_DELAY_IN_MILLISECONDS:-1000}
  idleConnectionMonitorThreadDelayInMilliseconds: ${WEBHOOK_MESSAGE_SENDING_QUEUE_IDLE_CONNECTION_MONITOR_THREAD_DELAY_IN_MILLISECONDS:-1000}


sqsConfig:
  nonStandardServiceEndpoint: ${AWS_SQS_NON_STANDARD_SERVICE_ENDPOINT:-true}
  endpoint: ${AWS_SQS_ENDPOINT:-}
  region: ${AWS_SQS_REGION:-region-1}
  secretKey: ${AWS_SECRET_KEY:-x}
  accessKey: ${AWS_ACCESS_KEY:-x}
  eventQueueUrl: ${AWS_SQS_PAYMENT_EVENT_QUEUE_URL}
  messageMaximumWaitTimeInSeconds: ${AWS_SQS_MESSAGE_MAXIMUM_WAIT_TIME_IN_SECONDS:-1}
  messageMaximumBatchSize: ${AWS_SQS_MESSAGE_MAXIMUM_BATCH_SIZE:-10}

queueMessageReceiverConfig:
  backgroundProcessingEnabled: ${BACKGROUND_PROCESSING_ENABLED:-false}
  threadDelayInMilliseconds: ${QUEUE_MESSAGE_RECEIVER_THREAD_DELAY_IN_MILLISECONDS:-1}
  numberOfThreads: ${QUEUE_MESSAGE_RECEIVER_NUMBER_OF_THREADS:-1}
  messageRetryDelayInSeconds: ${QUEUE_MESSAGE_RETRY_DELAY_IN_SECONDS:-1}

liveDataAllowDomains: ["gov.uk", "cadets.mod.uk"]

ecsContainerMetadataUriV4: ${ECS_CONTAINER_METADATA_URI_V4:-}
